Problem Link--->https://www.lintcode.com/problem/614

class Solution:
    """
    @param root: the root of binary tree
    @return: the length of the longest consecutive sequence path
    """
    def longest_consecutive2(self, root: TreeNode) -> int:
        # write your code here
        maximumLength=-float('inf')
        def solve(node,parent):
            nonlocal maximumLength
            if not node:
                return 0,0  #inc, dec
            l_inc,l_dec=solve(node.left,node)
            r_inc,r_dec=solve(node.right,node)
            maximumLength=max(maximumLength,l_inc+r_dec+1,l_dec+r_inc+1)
            if parent and node.val+1==parent.val:
                return max(l_inc,r_inc)+1,0
            if parent and node.val-1==parent.val:
                return 0,max(l_dec,r_dec)+1
            return 0,0
        solve(root,None)
        return maximumLength
            
